Source: cl-trivial-backtrace
Section: lisp
Priority: optional
Maintainer: Dimitri Fontaine <dim@tapoueh.org>
Build-Depends: debhelper (>= 7)
Build-Depends-Indep: dh-lisp
Standards-Version: 3.9.6
Homepage: http://common-lisp.net/project/trivial-backtrace/
Vcs-Git: http://common-lisp.net/project/trivial-backtrace/trivial-backtrace.git

Package: cl-trivial-backtrace
Architecture: all
Depends: ${misc:Depends}
Description: generate a Common Lisp backtrace portably
 On of the many things that didn't quite get into the Common Lisp standard
 was how to get a Lisp to output its call stack when something has gone
 wrong. As such, each Lisp has developed its own notion of what to display,
 how to display it, and what sort of arguments can be used to customize it.
 trivial-backtrace is a simple solution to generating a backtrace portably.
 As of 16 May 2012, it supports Allegro Common Lisp, LispWorks, ECL, MCL,
 SCL, SBCL and CMUCL.